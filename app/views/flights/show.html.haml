%p
  #notice= notice

%table.table.table-striped.table-bordered.table-sm.table-hover
  %tr
    %th.bg-secondary(colspan=6) MISSION DATA
  %tr
    %th.table-secondary Theater
    %td
      %a{ href: Settings.theaters[@flight.theater].link, target: "theater" }= Settings.theaters[@flight.theater].name
    %th.table-secondary Start
    %td= @flight.start
    %th.table-secondary Duration
    %td= @flight.duration
  %tr
    %th.table-secondary Callsign
    %td= @flight.full_callsign
    %th.table-secondary Mission
    %td= @flight.mission
    %th.table-secondary Comms
    %td= @flight.frequency
  %tr
    %th.table-secondary Task
    %td(colspan=5)= @flight.task
  %tr
    %th.table-secondary AO
    %td(colspan=5)= @flight.ao
  %tr
    %th.table-secondary Min WX Reqs
    %td(colspan=5)= @flight.minimum_weather_requirements
  %tr
    %th.bg-secondary(colspan=6) SLOTS
  %tr
    %td(colspan=6)
      .container
        .row
          .col-1.table-secondary #
          .col-2.table-secondary Callsign
          .col-3.table-secondary Pilot
          .col-1.table-secondary NetId
          .col-2.table-secondary Lasercode
          .col-1.table-secondary TCN
          .col-2.table-secondary
        - @flight.slots.times do |index|
          - number = index + 1
          .row
            .col-1= "-#{number}"
            - pilot = @flight.pilots.find_by number: number
            - if pilot
              .col-2= pilot.callsign
              .col-3= pilot.name
              .col-1= pilot.net_id
              .col-2= pilot.laser
              .col-1= pilot.tacan
              .col-2= link_to 'Unassign', flight_pilot_path(@flight, pilot), method: :delete, class: 'btn btn-danger btn-sm'
            - else
              .col-11
                = form_for :pilot, url: flight_pilots_path(@flight) do |f|
                  .form-row
                    = f.hidden_field :number, value: number
                    .col-auto
                      = f.select :name, @flight.assignable_pilots, {}, class: 'form-control form-control-sm'
                    .col-auto
                      = f.submit 'Assign', class: 'btn btn-primary btn-sm'
  %tr
    %th.bg-secondary(colspan=6) LOADOUT
  %tr
    %th.table-secondary A/A
    %td(colspan=3)= @loadout.a2a
    %th.table-secondary Gun
    %td= @loadout.gun
  %tr
    %th.table-secondary A/G
    %td(colspan=3)= @loadout.a2g
    %th.table-secondary Chaff
    %td= @loadout.chaff
  %tr
    %th.table-secondary Pods
    %td(colspan=3)= @loadout.pods
    %th.table-secondary Flares
    %td= @loadout.flares
  %tr
    %th.table-secondary Tanks
    %td(colspan=3)= @loadout.tanks
    %th.table-secondary Fuel
    %td= @loadout.fuel
  -# %tr
    %th.table-secondary Gross Weight
    %td(colspan=2)= @loadout.total_weight
    %th.table-secondary Drag Index
    %td(colspan=2)= @loadout.drag_index
  -# %tr
    %th.bg-secondary(colspan=6) FUEL
  -# %tr
    %th.table-secondary Takeoff
    %td= @loadout.takeoff_fuel
    %th.table-secondary Joker
    %td= @loadout.joker_fuel
    %th.table-secondary Bingo
    %td= @loadout.bingo_fuel
  -# %tr
    %th.bg-secondary(colspan=6) TOLD
  -# %tr
    %th.table-secondary Takeoff
    %td= @loadout.takeoff_speed
    %th.table-secondary Refusal
    %td= @loadout.refusal_speed
    %th.table-secondary Landing
    %td= @loadout.landing_speed
  %tr
    %td(colspan=6)
      = link_to 'Edit', edit_flight_loadout_path(@flight), class: 'btn btn-primary btn-sm'
  %tr
    %th.bg-secondary(colspan=6) AIRBASES
  %tr
    %td(colspan=6)
      .container
        .row
          .col-1.table-secondary Type
          .col-2.table-secondary Name
          .col-1.table-secondary TCN
          .col-1.table-secondary ATIS
          .col-1.table-secondary Ground
          .col-1.table-secondary Tower
          .col-1.table-secondary RWY
          .col-1.table-secondary Elev
          .col-1.table-secondary ILS
          .col-2.table-secondary Procedure
        - ab = start_airbase(@flight)
        - rwy = runway(ab, ab&.takeoff)
        .row
          .col-1 DEP
          .col-2= link_to_start_airbase(@flight)
          .col-1= ab&.tacan
          .col-1= ab&.atis
          .col-1= ab&.ground
          .col-1= ab&.tower
          .col-1= rwy&.name
          .col-1= rwy&.elevation
          .col-1= rwy&.ils
          .col-2= link_to_departure(@flight)
        - ab = land_airbase(@flight)
        - rwy = runway(ab, ab&.land)
        .row
          .col-1 ARR
          .col-2= link_to_land_airbase(@flight)
          .col-1= ab&.tacan
          .col-1= ab&.atis
          .col-1= ab&.ground
          .col-1= ab&.tower
          .col-1= rwy&.name
          .col-1= rwy&.elevation
          .col-1= rwy&.ils
          .col-2= link_to_recovery(@flight)
        - ab = divert_airbase(@flight)
        - rwy = runway(ab, ab&.land)
        .row
          .col-1 DIV
          .col-2= link_to_divert_airbase(@flight)
          .col-1= ab&.tacan
          .col-1= ab&.atis
          .col-1= ab&.ground
          .col-1= ab&.tower
          .col-1= rwy&.name
          .col-1= rwy&.elevation
          .col-1= rwy&.ils
          .col-2= link_to_divert(@flight)
  %tr
    %th.bg-secondary(colspan=6) SUPPORT
  %tr
    %td(colspan=6)
      .container
        .row
          .col-2.table-secondary Type
          .col-2.table-secondary Callsign
          .col-1.table-secondary Comms
          .col-1.table-secondary TCN
          .col-3.table-secondary Position
          .col-2.table-secondary Altitude
          .col-1.table-secondary Speed
        - @flight.selected_support.each do |support|
          .row
            .col-2= support.airframe.present? ? "#{support.type} (#{support.airframe})" : support.type
            .col-2= support.callsign
            .col-1= support.comms
            .col-1= support.tacan
            .col-3= support.position
            .col-2= support.altitude
            .col-1= support.speed
  %tr
    - if @flight.others.empty?
      %th.bg-secondary(colspan=6) FLIGHT PLAN
    - else
      %th.bg-secondary(colspan=4) FLIGHT PLAN
      %th.bg-secondary(colspan=2)
        = form_for :waypoints, url: copy_from_flight_waypoints_path(@flight), method: :put do |f|
          .form-row
            .col-8= f.select :flight, @flight.others.map { |fl| [fl.full_callsign, fl.id] }, {}, class: 'form-control form-control-sm'
            - if @flight.waypoints.empty?
              .col-4= f.submit 'Fetch', class: 'btn btn-primary btn-sm'
            - else
              .col-4= f.submit 'Fetch', class: 'btn btn-primary btn-sm', data: { confirm: 'This will overwrite all waypoints of the current flight. Are you sure?' }
  %tr
    %td(colspan=6)
      .container
        .row
          .col-1.table-secondary #
          .col-2.table-secondary Name
          .col-4.table-secondary Navaid/Coords/DME
          .col-1.table-secondary Altitude
          .col-2.table-secondary TOT
          .col-2.table-secondary
        - @flight.waypoints.each do |waypoint|
          = render waypoint
        .row#add-waypoint
          %button.btn.btn-primary.btn-sm(data-target="#waypointdlg" data-toggle="modal" type="button") Add waypoint
        #waypointdlg.modal.fade(aria-hidden="true" aria-labelledby="waypointdlgtitle" role="dialog" tabindex="-1")
          .modal-dialog.modal-dialog-centered(role="document")
            .modal-content
              %form#waypointform
                %input#waypoint_id(type='hidden')
                %input#waypoint_lat(type='hidden')
                %input#waypoint_lon(type='hidden')
                .modal-header
                  %h5#waypointdlgitle.modal-title Waypoint
                  %button.close(aria-label="Close" data-dismiss="modal" type="button")
                    %span(aria-hidden="true") ×
                .modal-body
                  .form-group.dropdown
                    %label.col-form-label(for="waypoint_name") Name:
                    %input#waypoint_name.form-control(type="text")
                    .dropdown-menu
                  .form-group
                    %label.col-form-label(for="waypoint_dme") DME:
                    %input#waypoint_dme.form-control
                  .form-group
                    %label.col-form-label(for="waypoint_pos") Position:
                    %input#waypoint_pos.form-control
                  .form-row
                    .col.form-group
                      %label.col-form-label(for="waypoint_fmt") Format:
                      %select#waypoint_fmt.form-control
                        %option(value="dm") Dezimalminuten
                        %option(value="dms") Dezimalsekunden
                        %option(value="d") Dezimalgrade
                    .col.form-group
                      %label.col-form-label(for="waypoint_prec") Präzision:
                      %input#waypoint_prec.form-control
                  .form-row
                    .col.form-group
                      %label.col-form-label(for="waypoint_elev") Elevation:
                      %input#waypoint_elev.form-control
                    .col.form-group
                      %label.col-form-label(for="waypoint_tot") TOT:
                      %input#waypoint_tot.form-control
                .modal-footer
                  %button.btn.btn-secondary(data-dismiss="modal" type="button") Cancel
                  %button.btn.btn-primary(type="submit") Save
  - comms = 1.upto(4).map { |num| [num, @flight.send("radio#{num}")] }.select { |e| e.last.present? }
  - unless comms.empty?
    %tr
      %th.bg-secondary(colspan=6) COMMS
    - comms.each do |e|
      %tr
        %td.table-secondary= e.first
        %td(colspan=5)= e.last
  - if @flight.notes.present?
    %tr
      %th.bg-secondary(colspan=6) NOTES
    %tr
      %td(colspan=6)
        %pre= @flight.notes

= link_to 'Edit', edit_flight_path(@flight), class: 'btn btn-primary'
= link_to 'Print', print_flight_path(@flight), class: 'btn btn-secondary', data: { disable_with: 'Generating PDF ...' }
= link_to 'Print Images', print_images_flight_path(@flight), class: 'btn btn-secondary', data: { disable_with: 'Generating images ...' }
= link_to 'Clone', clone_flight_path(@flight), method: :post, class: 'btn btn-info'
= link_to 'Export', export_flight_waypoints_path(@flight), class: 'btn btn-success'
= link_to 'Destroy', @flight, method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'
%p
= link_to 'Back', flights_path
